<!-- 
    1. Listen to Music
    2. Favorite
    3. capture snippets
 -->

 

 <%- include ('../partials/header') %>
<%- include ('../partials/menu') %>

<main>
    <!-- <link rel="stylesheet" href="/../css/music.css"> -->

    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

    <script src="https://sdk.scdn.co/spotify-player.js"></script>

    <script type="text/JavaScript" src="http://code.jquery.com/jquery-1.11.2.js"></script>
    <script type="text/JavaScript" src="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.js"></script>

    <% if(tokens !== 'undefined'){ %> 
    <script>


        var track = {
            name: "",
            album: {
                images: [
                    { url: "" }
                ]
            },
            artists: [
                { name: "" }
            ]
        }

        var is_paused  = false;
        var is_active = false;
        // const player = undefined;
        var current_track = undefined;

        window.onSpotifyWebPlaybackSDKReady = () => {
            console.log("Hello?")
            // console.log(tokens.access)
            

            const token = '<%= tokens %>';
            console.log(token);
            const player = new Spotify.Player({
                name: 'Web Playback SDK Quick Start Player',
                getOAuthToken: cb => { cb(token); },
                volume: 0.5
            });

            // Ready
            player.addListener('ready', ({ device_id }) => {
                console.log('Ready with Device ID', device_id);
                document.getElementById('device').value = device_id;
                 var s = "curl --request PUT \\\n" +
                    "  --url https://api.spotify.com/v1/me/player \\\n" + 
                    "  --header 'Authorization: Bearer " +  '<%= tokens %>' + "'\\\n" +
                    "  --header 'Content-Type: application/json' \\\n" +  
                    "  --data '{" + "\"device_ids\""+ ": " + "[" + "\"";

                console.log(s + device_id + "\"" + "]}\'"); 
            });

            // Not Ready
            player.addListener('not_ready', ({ device_id }) => {
                console.log('Device ID has gone offline', device_id);
            });

            player.addListener('initialization_error', ({ message }) => {
                console.error(message);
            });

            player.addListener('authentication_error', ({ message }) => {
                console.error(message);
            });

            player.addListener('account_error', ({ message }) => {
                console.error(message);
            });

            // document.getElementById('togglePlay').onclick = function() {
            //   player.togglePlay();
            // };

            player.addListener('player_state_changed', ( state => {

                console.log('state', state);
                if (!state) {
                    return;
                }
                
                track = state.track_window.current_track;
                is_paused = state.paused;

                player.getCurrentState().then( state => { 
                    (!state)? is_active = false : is_active = true 
                });

            }));

            player.addListener('player_state_changed', ({
                position,
                duration,
                track_window: { current_track }
            }) => {
                console.log('Currently Playing', current_track.name);
                // console.log('Position in Song', position);
                // console.log('Duration of Song', duration);
                // console.log(current_track.album.images[0].url);
                document.querySelector('now-playing__cover').src = current_track.album.images[0].url;
                document.querySelector('now-playing__name').innerText = current_track.name;
                document.querySelector('now-playing__artist').innerText = current_track.artists[0].name;
            });

            player.resume().then(() => {
                console.log('Resumed!');
            });

            player.connect();
        
            
        }
    </script>

    <% } %> 

    <script>
        function ShowSong(count) {
            var div = "ShowSong" + count
            var Song = document.getElementById(div);
            Song.style.display = "block";  // <-- Set it to block
        }
    </script>

    <script>
        function CloseSong(count) {
            var div = "ShowSong" + count
        var Song = document.getElementById(div);
        Song.style.display = "none";  // <-- Set it to block
        }
    </script>

    <script>
        function PlayMusic(song, count){
            let nostring_song = song.replace(/['"]+/g, '')
            let start_pos = {min: 0,
            sec: 0,
            total: 0}

            start_pos.min = parseInt(document.getElementById('minutes' + count).value, 10);
            start_pos.sec = parseInt(document.getElementById('seconds' + count).value, 10);
            start_pos.total = start_pos.min * 60000 + start_pos.sec * 1000;

            const device_id = document.getElementById('device').value
            var searchUrl = "https://api.spotify.com/v1/me/player/play?device_id=" + device_id;

            let info = {
                uris: [nostring_song],
                position_ms: start_pos.total
            };
            //info.uris[0] = document.getElementById('song').value;
            let body = JSON.stringify(info);
            console.log(body)

            let xhr = new XMLHttpRequest();
            xhr.open("PUT", searchUrl, true);
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.setRequestHeader('Authorization', 'Bearer <%= tokens %>');
            xhr.send(body);
            xhr.onload = handleApiResponse;
        }

        function PauseMusic(){
            const device_id = document.getElementById('device').value
            var searchUrl = "https://api.spotify.com/v1/me/player/pause?device_id=" + device_id;
            let xhr = new XMLHttpRequest();
            xhr.open("PUT", searchUrl, true)
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.setRequestHeader('Authorization', 'Bearer <%= tokens %>');
            xhr.send()
            //xhr.onload = handleApiResponse;
        }

        function handleApiResponse(){
            if ( this.status == 200){
                console.log(this.responseText);
                setTimeout(currentlyPlaying, 2000);
            }
            else if ( this.status == 204 ){
                setTimeout(currentlyPlaying, 2000);
            }
            else if ( this.status == 401 ){
                refreshAccessToken()
            }
        }
    </script>

    <div class="container">
        <h1>Make a Snippet!</h1>
        <form action="/music" method="post">
            <div class="form-group row">
                <label for="song name" class="col-sm-2 col-form-label">Enter a song title</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" id="songName" name="songName">
                </div>
            </div>

            <div class="submit_btn">
                <button type="submit"  class="btn btn-primary" id = "submit-button" 
                style ="background-color:rgb(79, 124, 172); border-color: rgb(79, 124, 172); color:rgb(255, 255, 255); color:rgb(30, 30, 30);">
                Search</button>
            </div>
        </form>

         <!-- <div className="container">
            <div className="main-wrapper">

                <img src="https://i.ytimg.com/vi/b5xT0AAjMGc/hqdefault.jpg" className="now-playing__cover" alt="" />

                <div className="now-playing__side">
                    <div className="now-playing__name">name</div>
                    <div className="now-playing__artist">artist</div>

                    <button className="btn-spotify" onClick={() => { player.previousTrack() }} >
                        &lt;&lt;
                    </button>

                    <button className="btn-spotify" onClick={() => { player.togglePlay() }} >
                        { is_paused ? "PLAY" : "PAUSE" }
                    </button>

                    <button className="btn-spotify" onClick={() => { player.nextTrack() }} >
                        &gt;&gt;
                    </button>
                </div>
            </div>
        </div> -->
    
        <% if(results !== 'undefined'){ %> 
            <% var count = 0 %> 
            <% results.forEach(el => { %>
                <% count = count + 1 %> 

            <div class="row">
                <div class="col">  
                        
                            
                                <div class="card mb-3" style="max-width: 540px;">
                                    <div class="row">
                                        <div class="col-md-4">
                                        
                                            <img src="<%= el.album.images[0].url %>" class="img-thumbnail rounded-start" style="width: auto; height: 195px;" alt="...">
                                        </div>

                                        <div class="col-md-8">
                                            <div class="card-body"> 
                                                <h5 class="card-title"> Title: <%= el.name %>  </h5>
                                                <h6 class="card-text"> Artist: <%= el.artists[0].name %>  </h6>
                                                <button type="submit"  class="btn btn-primary" onclick="ShowSong(<%= count %>)" id = "submit-button" data-toggle="modal" data-target="#myModal" 
                                                    style ="background-color:rgb(79, 124, 172); border-color: rgb(79, 124, 172); color:rgb(255, 255, 255); color:rgb(30, 30, 30);">
                                                    Use this song </button>
                                            </div>
                                        </div>   
                                    </div>
                                </div>   
                </div>

                <div class="col" style="display: none;" id="ShowSong<%= count %>"> 
                <!-- <div class="container d-flex justify-content-center my-4 mb-5"> -->

                    <div id="mobile-box">

                        <!-- Card -->
                        <div class="card">
                            <div class="bg-image hover-overlay ripple" data-mdb-ripple-color="light">
                                <img class="card-img-top" src="<%= el.album.images[0].url %>"
                                    alt="Card image cap">
                                <a href="#!">
                                    <div class="mask" style="background-color: rgba(251, 251, 251, 0.15);"></div>
                                </a>
                            </div>

                            <div class="card-body text-center">

                                <h5 class="h5 font-weight-bold"> <%= el.artists[0].name %> </h5>
                                <p class="mb-0"> <%= el.name %> </p>

                                <div class="holder">
                                    <!-- <audio controls>
                                        <source src="sample-3s.mp3" type="audio/mpeg">
                                      Your browser does not support the audio element.
                                      </audio> -->
                                    <!-- <form action="/music" method="PUT"> -->
                                    <h6>Duration of Song: <%= parseInt(el.duration_ms/60000) %> Minutes <%= parseInt((el.duration_ms % 60000)/1000) %> Seconds </h6>
                                    <form action = "/addsnippet"  method = "post" id = "addsnippetform" name = "addsnippetform">
                                        <input type="hidden" name="song" id="song" value="<%= el.uri %>">
                                        <input type="hidden" name="device" id="device">
                                        <H5>Snippet Start Position:</H5>
                                        <label for="minutes">Min</label>
                                        <input type="text" id="minutes<%= count %>" name="minutes" maxlength="2" placeholder="mm" size="4">
                                        <label for="seconds">Sec</label>
                                        <input type="text" id="seconds<%= count %>" name="seconds" placeholder="ss" maxlength="2" size="4">
                                        <input type = "hidden" name = "chosenArtist" id = "chosenArtist" 
                                            value = "<%= el.artists[0].name %>">
                                        <input type = "hidden" name = "chosenSong" id = "chosenSong" value = "<%= el.name %>">
                                        <input type = "hidden" name = "chosenImage" id = "chosenImage" 
                                                value = "<%= el.album.images[0].url %>">
                                        <input type = "text" id = "userComment" name = "userComment" placeholder = "song thoughts?">
                                        <input type="hidden" name="song" id="song" value="<%= el.uri %>">
                                    </form>
                                    <button type="submit"  class="btn btn-primary" onclick="" id = "submit-button" form = "addsnippetform"
                                    style ="background-color:rgb(79, 124, 172); border-color: rgb(79, 124, 172); color:rgb(255, 255, 255); color:rgb(30, 30, 30);">Confirm Snippet</button>
                                        <button type="submit"  class="btn btn-primary" id = "play-button" onclick="PlayMusic('<%= el.uri %>', '<%= count %>')"
                                            style ="background-color:rgb(79, 124, 172); border-color: rgb(79, 124, 172); color:rgb(255, 255, 255); color:rgb(30, 30, 30);"n>Play</button>
                                        
                                        <button type="submit"  class="btn btn-primary" id = "play-button" onclick="PauseMusic()"
                                            style ="background-color:rgb(79, 124, 172); border-color: rgb(79, 124, 172); color:rgb(255, 255, 255); color:rgb(30, 30, 30);"n>Pause</button>

                                    <!-- </form> -->
                                </div>

                            <div class="card-footer text-center">
                                </form>
                                <button type="submit"  class="btn btn-primary" onclick="CloseSong( <%= count %> )" id = "submit-button" 
                                style ="background-color:rgb(79, 124, 172); border-color: rgb(79, 124, 172); color:rgb(255, 255, 255); color:rgb(30, 30, 30);"n>Close Song</button>
                            </div>
                        </div>
                        <!-- Card -->
                    </div>
                </div>
            <!-- Content -->
            </div>
            <% }); %>
        <% } %> 
    </div>
</main>


<%- include ('../partials/footer') %>